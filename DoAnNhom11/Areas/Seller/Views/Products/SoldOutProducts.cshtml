@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<Product>;

@{
    ViewData["Title"] = "Product";

}

<h1>Sản phẩm hết hàng</h1>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[1].TenSp)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[1].AnhDaiDien)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[1].GiaNhap)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[1].GiaBan)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[1].SoLuongCon)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[1].PhanTramGiam)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TenSp)
                </td>
                <td>
                    <img src="@item.AnhDaiDien" width="100" />
                </td>
                <td>
                    @StringFormat.CurrencyFormat(item.GiaNhap)

                </td>
                <td>
                    @StringFormat.CurrencyFormat(item.GiaBan)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SoLuongCon)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhanTramGiam)
                </td>
                <td>

                    <button type="button" class="btn btn-primary">
                        <a asp-action="EditProduct" asp-route-id="@item.ProductId" style="color:white">Chỉnh Sửa</a>
                    </button>
                    <button type="button" class="btn btn-info">
                        <a asp-action="Details" asp-route-id="@item.ProductId" style="color:white">Chi Tiết</a>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>
<div align="center">
    @Html.PagedListPager(Model, page => Url.Action("SoldOutProducts", new { ma = 1, page = page }))

</div>
<style>
    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        z-index: 1000; /* Ensure dropdown is above other elements */
        max-height: 200px; /* Adjust max-height as needed */
        overflow-y: auto; /* Enable scrolling if needed */
        width: 100%; /* Set width to match search input */
        box-sizing: border-box; /* Ensure width includes padding and

                                            border */
    }

    .suggestion {
        padding: 10px;
        cursor: pointer;
    }

        .suggestion:hover {
            background-color: #f4f4f4;
        }

    #suggestions {
        display: none;
        position: absolute;
        background-color: #f1f1f1;
        min-width: 150px;
        box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
        z-index: 1;
    }

        #suggestions li {
            padding: 12px 16px;
            cursor: pointer;
        }

            #suggestions li:hover {
                background-color: #ddd;
            }
</style>
<script>
    $(document).ready(function () {
        $('#searchInput').keyup(function () {
            var query = $(this).val();

            // Gửi yêu cầu AJAX
            $.ajax({
                url: 'Admin/Products/SearchSuggestions', // Đường dẫn đến action trong controller xử lý yêu cầu
                type: 'Get',
                dataType: 'json',
                data: { query: query },
                success: function (response) {
                    displaySuggestions(response);
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                }
            });
        });

        function displaySuggestions(suggestions) {
            var suggestionsList = $('#suggestions');
            suggestionsList.empty();

            if (suggestions.length > 0) {
                $.each(suggestions, function (index, suggestion) {
                    var listItem = $('<li>').text(suggestion);
                    suggestionsList.append(listItem);
                });

                suggestionsList.show();
            } else {
                $.each(Model, function (index, suggestion) {
                    var listItem = $('<li>').text(suggestion);
                    suggestionsList.append(listItem);
                });
            }
        }

        // Xử lý sự kiện khi người dùng chọn một gợi ý sản phẩm
        $(document).on('click', '#suggestions li', function () {
            var selectedProduct = $(this).text();
            $('#searchInput').val(selectedProduct);
            $('#suggestions').hide();
        });

    });


</script>